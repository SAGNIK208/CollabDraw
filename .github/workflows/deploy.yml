name: Build and Deploy TurboRepo to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node & PNPM
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Create .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > ./packages/db/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > ./apps/http-backend/.env
          echo "RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}" >> ./apps/http-backend/.env

      - name: Generate Prisma Client
        run: pnpm --filter=./packages/db exec prisma generate

      - name: Build Turborepo
        run: pnpm turbo run build

      - name: Create Deployment Archive
        run: |
          mkdir -p deploy/http-backend
          cp -r ./apps/http-backend/dist deploy/http-backend/dist
          cp ./apps/http-backend/node_modules deploy/http-backend
          tar -czf build.tar.gz deploy

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

    # No need to manually write the key to ~/.ssh/id_rsa after this

      - name: Add Known Hosts
        run: ssh-keyscan ${{ secrets.DEPLOY_IP }} >> ~/.ssh/known_hosts

      - name: Upload Build to DEPLOY
        run: |
          scp build.tar.gz ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_IP }}:${{ secrets.DEPLOY_PATH }}

      - name: SSH and Deploy
        run: |
          ssh ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_IP }} << EOF
            set -e
            export PATH=\$PATH:/home/ubuntu/.nvm/versions/node/v22.14.0/bin
            cd ${{ secrets.DEPLOY_PATH }}

            # Clean old and unpack
            rm -rf deploy
            tar -xzf build.tar.gz
            cd deploy/http-backend

            # Restart services
            pm2 delete http-backend || true
            pm2 start dist/index.js --name http-backend
            cd ../..
          EOF
